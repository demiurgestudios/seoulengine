-- auto-generated file, DO NOT MODIFY
return {
  google = { type = "package";
    protobuf = { type = "package";
      DescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; repeated = true;
          name = "field";
          type_name = { "google","protobuf","FieldDescriptorProto" };
        };
        [3] = { type = "field"; repeated = true;
          name = "nested_type";
          type_name = { "google","protobuf","DescriptorProto" };
        };
        [4] = { type = "field"; repeated = true;
          name = "enum_type";
          type_name = { "google","protobuf","EnumDescriptorProto" };
        };
        [5] = { type = "field"; repeated = true;
          name = "extension_range";
          type_name = { "google","protobuf","DescriptorProto","ExtensionRange" };
        };
        [6] = { type = "field"; repeated = true;
          name = "extension";
          type_name = { "google","protobuf","FieldDescriptorProto" };
        };
        [7] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","MessageOptions" };
        };
        [8] = { type = "field"; repeated = true;
          name = "oneof_decl";
          type_name = { "google","protobuf","OneofDescriptorProto" };
        };
        map = {
          enum_type = 4;
          extension = 6;
          extension_range = 5;
          field = 2;
          name = 1;
          nested_type = 3;
          oneof_decl = 8;
          options = 7;
        };
        ExtensionRange = { type = "message";
          [1] = { type = "field"; scalar = true;
            name = "start";
            type_name = "int32";
          };
          [2] = { type = "field"; scalar = true;
            name = "end";
            type_name = "int32";
          };
          map = {
            ["end"] = 2;
            start = 1;
          };
        };
      };
      EnumDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; repeated = true;
          name = "value";
          type_name = { "google","protobuf","EnumValueDescriptorProto" };
        };
        [3] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","EnumOptions" };
        };
        map = {
          name = 1;
          options = 3;
          value = 2;
        };
      };
      EnumOptions = { type = "message";
        [2] = { type = "field"; scalar = true;
          name = "allow_alias";
          type_name = "bool";
        };
        [3] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          allow_alias = 2;
          deprecated = 3;
          uninterpreted_option = 999;
        };
        defaults = {
          deprecated = false;
        };
      };
      EnumValueDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; scalar = true;
          name = "number";
          type_name = "int32";
        };
        [3] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","EnumValueOptions" };
        };
        map = {
          name = 1;
          number = 2;
          options = 3;
        };
      };
      EnumValueOptions = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          deprecated = 1;
          uninterpreted_option = 999;
        };
        defaults = {
          deprecated = false;
        };
      };
      FieldDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; scalar = true;
          name = "extendee";
          type_name = "string";
        };
        [3] = { type = "field"; scalar = true;
          name = "number";
          type_name = "int32";
        };
        [4] = { type = "field";
          name = "label";
          type_name = { "google","protobuf","FieldDescriptorProto","Label" };
        };
        [5] = { type = "field";
          name = "type";
          type_name = { "google","protobuf","FieldDescriptorProto","Type" };
        };
        [6] = { type = "field"; scalar = true;
          name = "type_name";
          type_name = "string";
        };
        [7] = { type = "field"; scalar = true;
          name = "default_value";
          type_name = "string";
        };
        [8] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","FieldOptions" };
        };
        [9] = { type = "field"; scalar = true;
          name = "oneof_index";
          type_name = "int32";
        };
        map = {
          default_value = 7;
          extendee = 2;
          label = 4;
          name = 1;
          number = 3;
          oneof_index = 9;
          options = 8;
          type = 5;
          type_name = 6;
        };
        Label = { type = "enum";
          [1] = "LABEL_OPTIONAL";
          [2] = "LABEL_REQUIRED";
          [3] = "LABEL_REPEATED";
          map = {
            LABEL_OPTIONAL = 1;
            LABEL_REPEATED = 3;
            LABEL_REQUIRED = 2;
          };
        };
        Type = { type = "enum";
          [1] = "TYPE_DOUBLE";
          [2] = "TYPE_FLOAT";
          [3] = "TYPE_INT64";
          [4] = "TYPE_UINT64";
          [5] = "TYPE_INT32";
          [6] = "TYPE_FIXED64";
          [7] = "TYPE_FIXED32";
          [8] = "TYPE_BOOL";
          [9] = "TYPE_STRING";
          [10] = "TYPE_GROUP";
          [11] = "TYPE_MESSAGE";
          [12] = "TYPE_BYTES";
          [13] = "TYPE_UINT32";
          [14] = "TYPE_ENUM";
          [15] = "TYPE_SFIXED32";
          [16] = "TYPE_SFIXED64";
          [17] = "TYPE_SINT32";
          [18] = "TYPE_SINT64";
          map = {
            TYPE_BOOL = 8;
            TYPE_BYTES = 12;
            TYPE_DOUBLE = 1;
            TYPE_ENUM = 14;
            TYPE_FIXED32 = 7;
            TYPE_FIXED64 = 6;
            TYPE_FLOAT = 2;
            TYPE_GROUP = 10;
            TYPE_INT32 = 5;
            TYPE_INT64 = 3;
            TYPE_MESSAGE = 11;
            TYPE_SFIXED32 = 15;
            TYPE_SFIXED64 = 16;
            TYPE_SINT32 = 17;
            TYPE_SINT64 = 18;
            TYPE_STRING = 9;
            TYPE_UINT32 = 13;
            TYPE_UINT64 = 4;
          };
        };
      };
      FieldOptions = { type = "message";
        [1] = { type = "field";
          name = "ctype";
          type_name = { "google","protobuf","FieldOptions","CType" };
          default_value = "STRING";
        };
        [2] = { type = "field"; scalar = true;
          name = "packed";
          type_name = "bool";
        };
        [3] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [5] = { type = "field"; scalar = true;
          name = "lazy";
          type_name = "bool";
          default_value = false;
        };
        [10] = { type = "field"; scalar = true;
          name = "weak";
          type_name = "bool";
          default_value = false;
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          ctype = 1;
          deprecated = 3;
          lazy = 5;
          packed = 2;
          uninterpreted_option = 999;
          weak = 10;
        };
        defaults = {
          ctype = "STRING";
          deprecated = false;
          lazy = false;
          weak = false;
        };
        CType = { type = "enum";
          [0] = "STRING";
          [1] = "CORD";
          [2] = "STRING_PIECE";
          map = {
            CORD = 1;
            STRING = 0;
            STRING_PIECE = 2;
          };
        };
      };
      FileDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; scalar = true;
          name = "package";
          type_name = "string";
        };
        [3] = { type = "field"; scalar = true; repeated = true;
          name = "dependency";
          type_name = "string";
        };
        [4] = { type = "field"; repeated = true;
          name = "message_type";
          type_name = { "google","protobuf","DescriptorProto" };
        };
        [5] = { type = "field"; repeated = true;
          name = "enum_type";
          type_name = { "google","protobuf","EnumDescriptorProto" };
        };
        [6] = { type = "field"; repeated = true;
          name = "service";
          type_name = { "google","protobuf","ServiceDescriptorProto" };
        };
        [7] = { type = "field"; repeated = true;
          name = "extension";
          type_name = { "google","protobuf","FieldDescriptorProto" };
        };
        [8] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","FileOptions" };
        };
        [9] = { type = "field";
          name = "source_code_info";
          type_name = { "google","protobuf","SourceCodeInfo" };
        };
        [10] = { type = "field"; scalar = true; repeated = true;
          name = "public_dependency";
          type_name = "int32";
        };
        [11] = { type = "field"; scalar = true; repeated = true;
          name = "weak_dependency";
          type_name = "int32";
        };
        [12] = { type = "field"; scalar = true;
          name = "syntax";
          type_name = "string";
        };
        map = {
          dependency = 3;
          enum_type = 5;
          extension = 7;
          message_type = 4;
          name = 1;
          options = 8;
          package = 2;
          public_dependency = 10;
          service = 6;
          source_code_info = 9;
          syntax = 12;
          weak_dependency = 11;
        };
      };
      FileDescriptorSet = { type = "message";
        [1] = { type = "field"; repeated = true;
          name = "file";
          type_name = { "google","protobuf","FileDescriptorProto" };
        };
        map = {
          file = 1;
        };
      };
      FileOptions = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "java_package";
          type_name = "string";
        };
        [8] = { type = "field"; scalar = true;
          name = "java_outer_classname";
          type_name = "string";
        };
        [9] = { type = "field";
          name = "optimize_for";
          type_name = { "google","protobuf","FileOptions","OptimizeMode" };
          default_value = "SPEED";
        };
        [10] = { type = "field"; scalar = true;
          name = "java_multiple_files";
          type_name = "bool";
          default_value = false;
        };
        [11] = { type = "field"; scalar = true;
          name = "go_package";
          type_name = "string";
        };
        [16] = { type = "field"; scalar = true;
          name = "cc_generic_services";
          type_name = "bool";
          default_value = false;
        };
        [17] = { type = "field"; scalar = true;
          name = "java_generic_services";
          type_name = "bool";
          default_value = false;
        };
        [18] = { type = "field"; scalar = true;
          name = "py_generic_services";
          type_name = "bool";
          default_value = false;
        };
        [20] = { type = "field"; scalar = true;
          name = "java_generate_equals_and_hash";
          type_name = "bool";
          default_value = false;
        };
        [23] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [27] = { type = "field"; scalar = true;
          name = "java_string_check_utf8";
          type_name = "bool";
          default_value = false;
        };
        [31] = { type = "field"; scalar = true;
          name = "cc_enable_arenas";
          type_name = "bool";
          default_value = false;
        };
        [36] = { type = "field"; scalar = true;
          name = "objc_class_prefix";
          type_name = "string";
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          cc_enable_arenas = 31;
          cc_generic_services = 16;
          deprecated = 23;
          go_package = 11;
          java_generate_equals_and_hash = 20;
          java_generic_services = 17;
          java_multiple_files = 10;
          java_outer_classname = 8;
          java_package = 1;
          java_string_check_utf8 = 27;
          objc_class_prefix = 36;
          optimize_for = 9;
          py_generic_services = 18;
          uninterpreted_option = 999;
        };
        defaults = {
          cc_enable_arenas = false;
          cc_generic_services = false;
          deprecated = false;
          java_generate_equals_and_hash = false;
          java_generic_services = false;
          java_multiple_files = false;
          java_string_check_utf8 = false;
          optimize_for = "SPEED";
          py_generic_services = false;
        };
        OptimizeMode = { type = "enum";
          [1] = "SPEED";
          [2] = "CODE_SIZE";
          [3] = "LITE_RUNTIME";
          map = {
            CODE_SIZE = 2;
            LITE_RUNTIME = 3;
            SPEED = 1;
          };
        };
      };
      MessageOptions = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "message_set_wire_format";
          type_name = "bool";
          default_value = false;
        };
        [2] = { type = "field"; scalar = true;
          name = "no_standard_descriptor_accessor";
          type_name = "bool";
          default_value = false;
        };
        [3] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [7] = { type = "field"; scalar = true;
          name = "map_entry";
          type_name = "bool";
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          deprecated = 3;
          map_entry = 7;
          message_set_wire_format = 1;
          no_standard_descriptor_accessor = 2;
          uninterpreted_option = 999;
        };
        defaults = {
          deprecated = false;
          message_set_wire_format = false;
          no_standard_descriptor_accessor = false;
        };
      };
      MethodDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; scalar = true;
          name = "input_type";
          type_name = "string";
        };
        [3] = { type = "field"; scalar = true;
          name = "output_type";
          type_name = "string";
        };
        [4] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","MethodOptions" };
        };
        [5] = { type = "field"; scalar = true;
          name = "client_streaming";
          type_name = "bool";
          default_value = false;
        };
        [6] = { type = "field"; scalar = true;
          name = "server_streaming";
          type_name = "bool";
          default_value = false;
        };
        map = {
          client_streaming = 5;
          input_type = 2;
          name = 1;
          options = 4;
          output_type = 3;
          server_streaming = 6;
        };
        defaults = {
          client_streaming = false;
          server_streaming = false;
        };
      };
      MethodOptions = { type = "message";
        [33] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          deprecated = 33;
          uninterpreted_option = 999;
        };
        defaults = {
          deprecated = false;
        };
      };
      OneofDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        map = {
          name = 1;
        };
      };
      ServiceDescriptorProto = { type = "message";
        [1] = { type = "field"; scalar = true;
          name = "name";
          type_name = "string";
        };
        [2] = { type = "field"; repeated = true;
          name = "method";
          type_name = { "google","protobuf","MethodDescriptorProto" };
        };
        [3] = { type = "field";
          name = "options";
          type_name = { "google","protobuf","ServiceOptions" };
        };
        map = {
          method = 2;
          name = 1;
          options = 3;
        };
      };
      ServiceOptions = { type = "message";
        [33] = { type = "field"; scalar = true;
          name = "deprecated";
          type_name = "bool";
          default_value = false;
        };
        [999] = { type = "field"; repeated = true;
          name = "uninterpreted_option";
          type_name = { "google","protobuf","UninterpretedOption" };
        };
        map = {
          deprecated = 33;
          uninterpreted_option = 999;
        };
        defaults = {
          deprecated = false;
        };
      };
      SourceCodeInfo = { type = "message";
        [1] = { type = "field"; repeated = true;
          name = "location";
          type_name = { "google","protobuf","SourceCodeInfo","Location" };
        };
        map = {
          location = 1;
        };
        Location = { type = "message";
          [1] = { type = "field"; scalar = true; repeated = true;
            name = "path";
            type_name = "int32";
            packed = true;
          };
          [2] = { type = "field"; scalar = true; repeated = true;
            name = "span";
            type_name = "int32";
            packed = true;
          };
          [3] = { type = "field"; scalar = true;
            name = "leading_comments";
            type_name = "string";
          };
          [4] = { type = "field"; scalar = true;
            name = "trailing_comments";
            type_name = "string";
          };
          [6] = { type = "field"; scalar = true; repeated = true;
            name = "leading_detached_comments";
            type_name = "string";
          };
          map = {
            leading_comments = 3;
            leading_detached_comments = 6;
            path = 1;
            span = 2;
            trailing_comments = 4;
          };
        };
      };
      UninterpretedOption = { type = "message";
        [2] = { type = "field"; repeated = true;
          name = "name";
          type_name = { "google","protobuf","UninterpretedOption","NamePart" };
        };
        [3] = { type = "field"; scalar = true;
          name = "identifier_value";
          type_name = "string";
        };
        [4] = { type = "field"; scalar = true;
          name = "positive_int_value";
          type_name = "uint64";
        };
        [5] = { type = "field"; scalar = true;
          name = "negative_int_value";
          type_name = "int64";
        };
        [6] = { type = "field"; scalar = true;
          name = "double_value";
          type_name = "double";
        };
        [7] = { type = "field"; scalar = true;
          name = "string_value";
          type_name = "bytes";
        };
        [8] = { type = "field"; scalar = true;
          name = "aggregate_value";
          type_name = "string";
        };
        map = {
          aggregate_value = 8;
          double_value = 6;
          identifier_value = 3;
          name = 2;
          negative_int_value = 5;
          positive_int_value = 4;
          string_value = 7;
        };
        NamePart = { type = "message";
          [1] = { type = "field"; scalar = true;
            name = "name_part";
            type_name = "string";
          };
          [2] = { type = "field"; scalar = true;
            name = "is_extension";
            type_name = "bool";
          };
          map = {
            is_extension = 2;
            name_part = 1;
          };
        };
      };
      compiler = { type = "package";
        CodeGeneratorRequest = { type = "message";
          [1] = { type = "field"; scalar = true; repeated = true;
            name = "file_to_generate";
            type_name = "string";
          };
          [2] = { type = "field"; scalar = true;
            name = "parameter";
            type_name = "string";
          };
          [15] = { type = "field"; repeated = true;
            name = "proto_file";
            type_name = { "google","protobuf","FileDescriptorProto" };
          };
          map = {
            file_to_generate = 1;
            parameter = 2;
            proto_file = 15;
          };
        };
        CodeGeneratorResponse = { type = "message";
          [1] = { type = "field"; scalar = true;
            name = "error";
            type_name = "string";
          };
          [15] = { type = "field"; repeated = true;
            name = "file";
            type_name = { "google","protobuf","compiler","CodeGeneratorResponse","File" };
          };
          map = {
            error = 1;
            file = 15;
          };
          File = { type = "message";
            [1] = { type = "field"; scalar = true;
              name = "name";
              type_name = "string";
            };
            [2] = { type = "field"; scalar = true;
              name = "insertion_point";
              type_name = "string";
            };
            [15] = { type = "field"; scalar = true;
              name = "content";
              type_name = "string";
            };
            map = {
              content = 15;
              insertion_point = 2;
              name = 1;
            };
          };
        };
      };
    };
  };
}

